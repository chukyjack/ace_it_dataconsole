/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { IgxTreeGridComponent } from './tree-grid.component';
import { IgxTreeGridRowComponent } from './tree-grid-row.component';
import { IgxChipsModule } from '../../chips/chips.module';
import { IgxGridCommonModule } from '../grid-common.module';
import { IgxTreeGridHierarchizingPipe } from './tree-grid.pipes';
import { IgxTreeGridFlatteningPipe, IgxTreeGridSortingPipe, IgxTreeGridPagingPipe, IgxTreeGridTransactionPipe } from './tree-grid.pipes';
import { IgxTreeGridCellComponent } from './tree-cell.component';
import { IgxTreeGridFilteringPipe } from './tree-grid.filtering.pipe';
import { IgxTreeGridSummaryPipe } from './tree-grid.summary.pipe';
/**
 * @hidden
 */
var IgxTreeGridModule = /** @class */ (function () {
    function IgxTreeGridModule() {
    }
    IgxTreeGridModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        IgxTreeGridComponent,
                        IgxTreeGridRowComponent,
                        IgxTreeGridCellComponent,
                        IgxTreeGridHierarchizingPipe,
                        IgxTreeGridFlatteningPipe,
                        IgxTreeGridSortingPipe,
                        IgxTreeGridFilteringPipe,
                        IgxTreeGridPagingPipe,
                        IgxTreeGridTransactionPipe,
                        IgxTreeGridSummaryPipe
                    ],
                    exports: [
                        IgxTreeGridComponent,
                        IgxTreeGridRowComponent,
                        IgxTreeGridCellComponent,
                        IgxGridCommonModule
                    ],
                    imports: [
                        CommonModule,
                        FormsModule,
                        IgxChipsModule,
                        IgxGridCommonModule
                    ]
                },] }
    ];
    return IgxTreeGridModule;
}());
export { IgxTreeGridModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ncmlkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvZ3JpZHMvdHJlZS1ncmlkL3RyZWUtZ3JpZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDNUQsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLHNCQUFzQixFQUFFLHFCQUFxQixFQUFFLDBCQUEwQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDekksT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDakUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDdEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7Ozs7QUFLbEU7SUFBQTtJQTJCQSxDQUFDOztnQkEzQkEsUUFBUSxTQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixvQkFBb0I7d0JBQ3BCLHVCQUF1Qjt3QkFDdkIsd0JBQXdCO3dCQUN4Qiw0QkFBNEI7d0JBQzVCLHlCQUF5Qjt3QkFDekIsc0JBQXNCO3dCQUN0Qix3QkFBd0I7d0JBQ3hCLHFCQUFxQjt3QkFDckIsMEJBQTBCO3dCQUMxQixzQkFBc0I7cUJBQ3ZCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxvQkFBb0I7d0JBQ3BCLHVCQUF1Qjt3QkFDdkIsd0JBQXdCO3dCQUN4QixtQkFBbUI7cUJBQ3BCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsY0FBYzt3QkFDZCxtQkFBbUI7cUJBQ3BCO2lCQUNGOztJQUVELHdCQUFDO0NBQUEsQUEzQkQsSUEyQkM7U0FEWSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgSWd4VHJlZUdyaWRDb21wb25lbnQgfSBmcm9tICcuL3RyZWUtZ3JpZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4VHJlZUdyaWRSb3dDb21wb25lbnQgfSBmcm9tICcuL3RyZWUtZ3JpZC1yb3cuY29tcG9uZW50JztcbmltcG9ydCB7IElneENoaXBzTW9kdWxlIH0gZnJvbSAnLi4vLi4vY2hpcHMvY2hpcHMubW9kdWxlJztcbmltcG9ydCB7IElneEdyaWRDb21tb25Nb2R1bGUgfSBmcm9tICcuLi9ncmlkLWNvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgSWd4VHJlZUdyaWRIaWVyYXJjaGl6aW5nUGlwZSB9IGZyb20gJy4vdHJlZS1ncmlkLnBpcGVzJztcbmltcG9ydCB7IElneFRyZWVHcmlkRmxhdHRlbmluZ1BpcGUsIElneFRyZWVHcmlkU29ydGluZ1BpcGUsIElneFRyZWVHcmlkUGFnaW5nUGlwZSwgSWd4VHJlZUdyaWRUcmFuc2FjdGlvblBpcGUgfSBmcm9tICcuL3RyZWUtZ3JpZC5waXBlcyc7XG5pbXBvcnQgeyBJZ3hUcmVlR3JpZENlbGxDb21wb25lbnQgfSBmcm9tICcuL3RyZWUtY2VsbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4VHJlZUdyaWRGaWx0ZXJpbmdQaXBlIH0gZnJvbSAnLi90cmVlLWdyaWQuZmlsdGVyaW5nLnBpcGUnO1xuaW1wb3J0IHsgSWd4VHJlZUdyaWRTdW1tYXJ5UGlwZSB9IGZyb20gJy4vdHJlZS1ncmlkLnN1bW1hcnkucGlwZSc7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBJZ3hUcmVlR3JpZENvbXBvbmVudCxcbiAgICBJZ3hUcmVlR3JpZFJvd0NvbXBvbmVudCxcbiAgICBJZ3hUcmVlR3JpZENlbGxDb21wb25lbnQsXG4gICAgSWd4VHJlZUdyaWRIaWVyYXJjaGl6aW5nUGlwZSxcbiAgICBJZ3hUcmVlR3JpZEZsYXR0ZW5pbmdQaXBlLFxuICAgIElneFRyZWVHcmlkU29ydGluZ1BpcGUsXG4gICAgSWd4VHJlZUdyaWRGaWx0ZXJpbmdQaXBlLFxuICAgIElneFRyZWVHcmlkUGFnaW5nUGlwZSxcbiAgICBJZ3hUcmVlR3JpZFRyYW5zYWN0aW9uUGlwZSxcbiAgICBJZ3hUcmVlR3JpZFN1bW1hcnlQaXBlXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBJZ3hUcmVlR3JpZENvbXBvbmVudCxcbiAgICBJZ3hUcmVlR3JpZFJvd0NvbXBvbmVudCxcbiAgICBJZ3hUcmVlR3JpZENlbGxDb21wb25lbnQsXG4gICAgSWd4R3JpZENvbW1vbk1vZHVsZVxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIElneENoaXBzTW9kdWxlLFxuICAgIElneEdyaWRDb21tb25Nb2R1bGVcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBJZ3hUcmVlR3JpZE1vZHVsZSB7XG59XG4iXX0=
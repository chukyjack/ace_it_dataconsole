import { ElementRef, EventEmitter, OnInit, OnDestroy, TemplateRef } from '@angular/core';
import { Subject } from 'rxjs';
import { SliderHandle } from '../slider.component';
/**
 * @hidden
 */
export declare class IgxSliderThumbComponent implements OnInit, OnDestroy {
    private _elementRef;
    private _timer;
    private _isActiveLabel;
    private _destroy$;
    isActive: boolean;
    value: number;
    continuous: boolean;
    thumbLabelVisibilityDuration: any;
    disabled: boolean;
    onPan: Subject<number>;
    stepDistance: number;
    step: number;
    fromHandler: boolean;
    templateRef: TemplateRef<any>;
    context: any;
    type: SliderHandle;
    onThumbValueChange: EventEmitter<number>;
    onChange: EventEmitter<any>;
    tabindex: number;
    readonly thumbFromClass: boolean;
    readonly thumbToClass: boolean;
    readonly thumbFromActiveClass: boolean;
    readonly thumbToActiveClass: boolean;
    readonly nativeElement: any;
    private readonly thumbPositionX;
    readonly destroy: Subject<boolean>;
    constructor(_elementRef: ElementRef);
    /**
     * @hidden
     */
    ngOnInit(): void;
    /**
     * @hidden
     */
    ngOnDestroy(): void;
    onKeyDown(event: KeyboardEvent): void;
    onBlur(): void;
    onFocusListener(): void;
    showThumbLabel(): void;
    hideThumbLabel(): void;
    private updateThumbValue;
    private calculateTrackUpdate;
    private stepToProceed;
}
export declare class IgxSliderThumbModule {
}

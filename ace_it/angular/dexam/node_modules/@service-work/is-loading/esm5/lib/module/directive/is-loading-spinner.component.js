/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectorRef, ElementRef } from '@angular/core';
var IsLoadingSpinnerComponent = /** @class */ (function () {
    // don't need change detection for this component
    function IsLoadingSpinnerComponent(cdr, el) {
        this.cdr = cdr;
        this.el = el;
        this.cdr.detach();
    }
    IsLoadingSpinnerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sw-is-loading-spinner',
                    template: "",
                    host: { class: 'sw-is-loading-spinner' }
                }] }
    ];
    /** @nocollapse */
    IsLoadingSpinnerComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef }
    ]; };
    return IsLoadingSpinnerComponent;
}());
export { IsLoadingSpinnerComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    IsLoadingSpinnerComponent.prototype.cdr;
    /** @type {?} */
    IsLoadingSpinnerComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtbG9hZGluZy1zcGlubmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzZXJ2aWNlLXdvcmsvaXMtbG9hZGluZy8iLCJzb3VyY2VzIjpbImxpYi9tb2R1bGUvZGlyZWN0aXZlL2lzLWxvYWRpbmctc3Bpbm5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpFO0lBTUUsaURBQWlEO0lBQ2pELG1DQUFvQixHQUFzQixFQUFTLEVBQWM7UUFBN0MsUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUFBUyxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBQy9ELElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDcEIsQ0FBQzs7Z0JBVEYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLFFBQVEsRUFBRSxFQUFFO29CQUNaLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRTtpQkFDekM7Ozs7Z0JBTm1CLGlCQUFpQjtnQkFBRSxVQUFVOztJQVlqRCxnQ0FBQztDQUFBLEFBVkQsSUFVQztTQUxZLHlCQUF5Qjs7Ozs7O0lBRXhCLHdDQUE4Qjs7SUFBRSx1Q0FBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdG9yUmVmLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3N3LWlzLWxvYWRpbmctc3Bpbm5lcicsXG4gIHRlbXBsYXRlOiBgYCxcbiAgaG9zdDogeyBjbGFzczogJ3N3LWlzLWxvYWRpbmctc3Bpbm5lcicgfSxcbn0pXG5leHBvcnQgY2xhc3MgSXNMb2FkaW5nU3Bpbm5lckNvbXBvbmVudCB7XG4gIC8vIGRvbid0IG5lZWQgY2hhbmdlIGRldGVjdGlvbiBmb3IgdGhpcyBjb21wb25lbnRcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjZHI6IENoYW5nZURldGVjdG9yUmVmLCBwdWJsaWMgZWw6IEVsZW1lbnRSZWYpIHtcbiAgICB0aGlzLmNkci5kZXRhY2goKTtcbiAgfVxufVxuIl19
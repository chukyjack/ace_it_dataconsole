import { Renderer2, ElementRef, OnDestroy, AfterViewInit, ComponentFactoryResolver, SimpleChange, OnChanges, Injector } from '@angular/core';
import { IsLoadingService } from '../../is-loading.service';
import { ISWIsLoadingDirectiveConfig } from './is-loading.directive.config';
export declare class IsLoadingDirective implements OnChanges, AfterViewInit, OnDestroy {
    private renderer;
    private isLoadingService;
    private el;
    private componentFactoryResolver;
    private injector;
    swIsLoading: unknown;
    swIsLoadingDisableEl: boolean;
    swIsLoadingSpinner: boolean;
    readonly isLoading: boolean;
    private _isLoading;
    private spinnerEl?;
    private config;
    private _swIsLoadingDisableEl;
    private _swIsLoadingSpinner;
    private loadingClass;
    private pending;
    private textValueSubscription?;
    private booleanValueResolveFn?;
    constructor(config: ISWIsLoadingDirectiveConfig | null, renderer: Renderer2, isLoadingService: IsLoadingService, el: ElementRef<HTMLElement>, componentFactoryResolver: ComponentFactoryResolver, injector: Injector);
    ngOnChanges(changes: {
        swIsLoadingSpinner?: SimpleChange;
        swIsLoadingDisableEl?: SimpleChange;
    }): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private startLoading;
    private stopLoading;
    private addSpinnerEl;
    private removeSpinnerEl;
    /**
     * Input value handlers
     */
    private stringValue;
    private notStringValue;
    private observableValue;
    private notObservableValue;
    private subscriptionValue;
    private notSubscriptionValue;
    private promiseValue;
    private notPromiseValue;
    private booleanValue;
    private notBooleanValue;
}
